#!/usr/bin/env ruby

require 'jgrep'
require 'optparse'

options = {:flat => false}

OptionParser.new do |opts|
    opts.banner = "Usage: jgrep [options] \"expression\""
    opts.on("-s", "--simple FIELD", "Display a single field from each of the resulting json documents") do |field|
        options[:field] = field
    end
    opts.on("-f", "--flat", "Display non pretty json") do
        options[:flat] = true
    end
    opts.on("-v", "--verbose", "Verbose output") do
        JGrep::verbose_on
    end

end.parse!

begin
    expression = nil

    #Identify the expression from command line arguments
    ARGV.each do |argument|
        if argument =~ /<|>|=/
            expression = argument
            ARGV.delete(argument)
        end
    end

    #Load json from standard in if tty is false
    #else find and load file from command lin arugments
    unless STDIN.tty?
        json = STDIN.read
    else
        if ARGV.size == 1
            json = File.read(ARGV.first)
        else
            raise "No json input specified"
        end
    end

    unless options[:field]
        result = JGrep::jgrep((json), expression)
        unless result == []
            (options[:flat] == false) ? puts(JSON.pretty_generate(result)) : puts(result.to_json)
        end
    else
        if options[:field] =~ /=|<|>/
            raise "'-s' flag requires a field to display"
        end

        result = JGrep::jgrep((json), expression)

        result.each do |r|
            options[:field].split(".").each do |node|
                unless r.is_a? Array
                    r = r[node]
                else
                    break
                end
            end
            unless r.nil?
                (!r.is_a?(Array) && !r.is_a?(Hash)) ? puts(r) : puts(JSON.pretty_generate(r))
            end
        end
    end
rescue Exception => e
    STDERR.puts "Error - #{e}"
    exit 1
end
